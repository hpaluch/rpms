diff -r -u setedit/include/ced_clas.h setedit-new/include/ced_clas.h
--- setedit/include/ced_clas.h	2015-06-30 16:09:25.000000000 +0200
+++ setedit-new/include/ced_clas.h	2015-06-30 16:32:11.000000000 +0200
@@ -483,7 +483,7 @@
     // a pointer to the function to format the line to be displayed.
     void (TCEditor::*formatLinePtr)(void *, unsigned, int, unsigned short, unsigned, uint32, unsigned, uint32 *);
     // a pointer to the function to format calculate the s. hl. attributes
-    unsigned (*LineMeassure)(char *, char *, uint32 &, uint32 *extra=0);
+    unsigned (*LineMeassure)(char *, char *, uint32 &, uint32 *extra);
     shlState SyntaxHL;        // Says the type of syntax highlight used
     int      GenericSHL;      // What sub-type if the type is generic
     int SHLValueSelected;     // That's the position in the array of the detected SHL
diff -r -u setedit/infview/include/inf.h setedit-new/infview/include/inf.h
--- setedit/infview/include/inf.h	2015-06-30 16:09:26.000000000 +0200
+++ setedit-new/infview/include/inf.h	2015-06-30 16:42:36.000000000 +0200
@@ -300,7 +300,7 @@
 
  virtual TPalette& getPalette() const;
  virtual void close();
- virtual TInfWindow::~TInfWindow();
+ virtual ~TInfWindow();
  TInfViewer *viewer;
  Boolean isTheOne;
  static void SetMagicEditorInfoTranslation() { TInfViewer::TranslateName=1; };
diff -r -u setedit/mainsrc/ceditor.cc setedit-new/mainsrc/ceditor.cc
--- setedit/mainsrc/ceditor.cc	2015-06-30 16:09:26.000000000 +0200
+++ setedit-new/mainsrc/ceditor.cc	2015-06-30 16:42:03.000000000 +0200
@@ -870,7 +870,7 @@
       if (proxLineNum>totalLines)
          break;
       OldAttr=lenLines.getAttr(proxLineNum);
-      proxLine+=LineMeassure(proxLine,proxLine+lenLines[proxLineNum],PrevAttr);
+      proxLine+=LineMeassure(proxLine,proxLine+lenLines[proxLineNum],PrevAttr,0);
       lenLines.setAttr(proxLineNum,PrevAttr);
       proxLineNum++;
      }
@@ -975,7 +975,7 @@
              attr=lenLines.getAttr(curPos.y-1);
           else
              attr=0;
-          LineMeassure(bufEdit,inEditPtr+restCharsInLine,attr);
+          LineMeassure(bufEdit,inEditPtr+restCharsInLine,attr,0);
           TestPropagation(attrInEdit,attr,curLinePtr+lenLines[curPos.y],curPos.y+1);
           attrInEdit=attr;
          }
@@ -991,7 +991,7 @@
                  attr=lenLines.getAttr(curPos.y-1);
               else
                  attr=0;
-              LineMeassure(bufEdit,inEditPtr+restCharsInLine,attr);
+              LineMeassure(bufEdit,inEditPtr+restCharsInLine,attr,0);
               if (TestPropagation(attrInEdit,attr,curLinePtr+lenLines[curPos.y],curPos.y+1))
                 {
                  attrInEdit=attr;
@@ -6905,7 +6905,7 @@
  // Recalculate for the inserted block
  for (;firstLine<=lastLine;firstLine++)
     {
-     firstTouchedP+=LineMeassure(firstTouchedP,end,attr);
+     firstTouchedP+=LineMeassure(firstTouchedP,end,attr,0);
      lenLines.setAttr(firstLine,attr);
     }
  // Test for propagation:
@@ -6913,7 +6913,7 @@
  if (firstLine<=totalLines)
    {
     // Yes, recalculate the following line
-    firstTouchedP+=LineMeassure(firstTouchedP,end,attr);
+    firstTouchedP+=LineMeassure(firstTouchedP,end,attr,0);
     // Test if there are a propagation
     TestPropagation(lenLines.getAttr(firstLine),attr,firstTouchedP,firstLine+1);
     // Set the recalculated value
@@ -7470,13 +7470,13 @@
   else
      attr=0;
   // recalculate the attr of the actual (modified) line
-  s+=LineMeassure(s,s+lenLines[y],attr);
+  s+=LineMeassure(s,s+lenLines[y],attr,0);
   lenLines.setAttr(y,attr);
   // There are more lines?
   if ((uint32)curPos.y<totalLines)
     {
      // Yes, recalculate the following line
-     s+=LineMeassure(s,s+lenLines[++y],attr);
+     s+=LineMeassure(s,s+lenLines[++y],attr,0);
      // Test if there are a propagation
      TestPropagation(lenLines.getAttr(y),attr,s,y+1);
      // Set the recalculated value
@@ -9091,7 +9091,7 @@
  unsigned rest;
  int y=FindLineForOffSet(offset,rest);
  uint32 attr=lenLines.getAttr(y);
- LineMeassure(buffer+offset-rest,buffer+offset,attr);
+ LineMeassure(buffer+offset-rest,buffer+offset,attr,0);
  return attr;
 }
 
@@ -10232,7 +10232,7 @@
       }
     while (s<end)
       {
-       ThisLine=LineMeassure(s,end,Attr);
+       ThisLine=LineMeassure(s,end,Attr,0);
        if (ThisLine)
          {
           if (ThisLine>65535)
@@ -10266,7 +10266,7 @@
     t0=clock();
     while (s<end)
       {
-       ThisLine=LineMeassure(s,end,Attr);
+       ThisLine=LineMeassure(s,end,Attr,0);
        if (ThisLine)
          {
           lenLines.setAll(lines++,ThisLine,Attr);
@@ -10285,7 +10285,7 @@
     t2=clock();
     while (s<end)
       {
-       ThisLine=LineMeassure(s,end,Attr);
+       ThisLine=LineMeassure(s,end,Attr,0);
        if (ThisLine)
          {
           lenLines.setAll(lines++,ThisLine,Attr);
@@ -10899,7 +10899,7 @@
     CacheSyntaxHLData(GenericSHL);
     while (s<end)
       {
-       ThisLine=LineMeassure(s,end,Attr);
+       ThisLine=LineMeassure(s,end,Attr,0);
        if (ThisLine)
           lenLines.setAll(lines++,ThisLine,Attr);
        s+=ThisLine;
diff -r -u setedit/mainsrc/slpinter.cc setedit-new/mainsrc/slpinter.cc
--- setedit/mainsrc/slpinter.cc	2015-06-30 16:09:26.000000000 +0200
+++ setedit-new/mainsrc/slpinter.cc	2015-06-30 16:51:26.000000000 +0200
@@ -238,7 +238,7 @@
     Editor->MakeEfectiveLineInEdition();
 
  uint32 attr=Editor->lenLines.getAttr(Editor->curPos.y);
- Editor->LineMeassure(Editor->curLinePtr,Editor->ColToPointer(),attr);
+ Editor->LineMeassure(Editor->curLinePtr,Editor->ColToPointer(),attr,NULL);
  return attr;
 }
 
diff -r -u setedit/setedit/edprefs.cc setedit-new/setedit/edprefs.cc
--- setedit/setedit/edprefs.cc	2015-06-30 16:09:27.000000000 +0200
+++ setedit-new/setedit/edprefs.cc	2015-06-30 16:49:18.000000000 +0200
@@ -330,9 +330,9 @@
  uint32  scr_on                CLY_Packed;
  TCollection *savers           CLY_Packed;
  ccIndex scr_sel               CLY_Packed;
- char    xtOp[extscrsParMxLen] CLY_Packed;
- char    time[5]               CLY_Packed;
- char    timeM[5]              CLY_Packed;
+ char    xtOp[extscrsParMxLen];// CLY_Packed;
+ char    time[5];//               CLY_Packed;
+ char    timeM[5];//              CLY_Packed;
 } BoxSavers;
 #pragma pack()
 
@@ -417,8 +417,8 @@
  uint32 ops          CLY_Packed;
  uint32 clk_on       CLY_Packed;
  uint32 clk_mode     CLY_Packed;
- char   editors[5]   CLY_Packed;
- char   closed[5]    CLY_Packed;
+ char   editors[5];//   CLY_Packed;
+ char   closed[5];//    CLY_Packed;
 } BoxGral;
 #pragma pack()
 
@@ -646,7 +646,7 @@
  uint32 beep     CLY_Packed;
  uint32 opts     CLY_Packed;
  uint32 opsAv    CLY_Packed;
- char   width[5] CLY_Packed;
+ char   width[5];// CLY_Packed;
 } BoxOthers;
 #pragma pack()
 
@@ -990,12 +990,12 @@
 {
  uint32  priUse         CLY_Packed;
  TCollection *priList   CLY_Packed;
- ccIndex priFont        CLY_Packed;
+ ccIndex priFont        ; //CLY_Packed;
  TCollection *priSizes  CLY_Packed;
- ccIndex priSize        CLY_Packed;
+ ccIndex priSize        ; // CLY_Packed;
  uint32  secUse         CLY_Packed;
  TCollection *secList   CLY_Packed;
- ccIndex secFont        CLY_Packed;
+ ccIndex secFont; //        CLY_Packed;
 } FontsBox;
 #pragma pack()
 
@@ -1199,12 +1199,12 @@
 typedef struct
 {
  uint32  options        CLY_Packed;
- char sizeW[5]          CLY_Packed;
- char sizeH[5]          CLY_Packed;
- char sizeCW[5]         CLY_Packed;
- char sizeCH[5]         CLY_Packed;
- char command[80]       CLY_Packed;
- char mode[10]          CLY_Packed;
+ char sizeW[5];//          CLY_Packed;
+ char sizeH[5];//          CLY_Packed;
+ char sizeCW[5];//         CLY_Packed;
+ char sizeCH[5];//         CLY_Packed;
+ char command[80];//       CLY_Packed;
+ char mode[10];//          CLY_Packed;
 } ScreenSizeBox;
 #pragma pack()
 
diff -r -u setedit/setedit/runprog.cc setedit-new/setedit/runprog.cc
--- setedit/setedit/runprog.cc	2015-06-30 16:09:27.000000000 +0200
+++ setedit-new/setedit/runprog.cc	2015-06-30 16:51:05.000000000 +0200
@@ -90,12 +90,12 @@
  #pragma pack(1)
  struct
  {
-  char   ComAux[maxCommand]  __attribute__((packed));
+  char   ComAux[maxCommand]; //  __attribute__((packed));
   uint32 Options             __attribute__((packed));
   uint32 OpsScroll           __attribute__((packed));
   uint32 OpsScrHz            __attribute__((packed));
-  char   Lines[4]            __attribute__((packed));
-  TListBoxRec tl             __attribute__((packed));
+  char   Lines[4]; //            __attribute__((packed));
+  TListBoxRec tl; //             __attribute__((packed));
  } box;
  #pragma pack()
  strcpy(box.ComAux,Command);
